package com.infygo.tickets.service;

import java.time.LocalDate;
import java.util.Random;
import java.util.Scanner;
import java.util.Set;
import org.modelmapper.ModelMapper;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.context.annotation.PropertySource;
import org.springframework.core.env.Environment;
import org.springframework.stereotype.Service;
import org.springframework.web.client.RestTemplate;

import com.infygo.tickets.DTO.FlightDTO;
import com.infygo.tickets.DTO.PassangerDTO;
import com.infygo.tickets.DTO.TicketDTO;
import com.infygo.tickets.entity.Ticket;
import com.infygo.tickets.exception.FlightUnavailabeException;
import com.infygo.tickets.exception.InvalidCredentialsException;
import com.infygo.tickets.exception.NotExstingException;
import com.infygo.tickets.repository.TicketRepository;


@Service
@PropertySource("classpath:validation.properties")
public class TicketService {
  
	public static Scanner scan =new Scanner(System.in); 

	@Autowired
	private PassangerService passangerService;
	@Autowired
	private RestTemplate restTemplate;
	@Autowired
	private ModelMapper modelMapper;
	@Autowired
	private TicketRepository ticketRepository;
	
	
	public TicketDTO bookticket(String flightId, String userId,
			Set<PassangerDTO> passangers,String creditCardNumber) 
			throws InvalidCredentialsException, FlightUnavailabeException, NotExstingException {
		Random random = new Random();
		Ticket ticket= new Ticket();
		Integer pnr = random.nextInt((Integer.MAX_VALUE - 0) + 0) + 1;
		
		Set<PassangerDTO> passangerDTOs = passangers;
		ticket.setNoOfSeats(passangerDTOs.size());
		FlightDTO flightDTO=restTemplate.getForObject("http://FlightMS/infygo/flights/details/"+flightId,
				FlightDTO.class);
		ticket.setPnr(pnr);
		ticket.setFlightId(flightId);
		ticket.setUserId(userId);
		ticket.setDepartureDate(flightDTO.getFlightAvailableDate());
		ticket.setDepartureTime(flightDTO.getDepartureTime());
		ticket.setTotalFare(flightDTO.getFare()*ticket.getNoOfSeats());
		ticket.setBookingdate(LocalDate.now());
		this.restTemplate.put("http://CreditCardMS/infygo/addbill/"
		+ticket.getTotalFare()+"/"+creditCardNumber,userId);
		passangerService.addPassanger(passangerDTOs,pnr);
		this.restTemplate.put("http://FlightMS/infygo/flights/addpassanger/"
				+flightId+"/"+ticket.getNoOfSeats(),flightId);
		ticketRepository.save(ticket);
		
		return modelMapper.map(ticket, TicketDTO.class);	
	}

}
